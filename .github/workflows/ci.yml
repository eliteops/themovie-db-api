name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 10s

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tmdb-api/requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}/tmdb-api
          TESTING: "true"  # This will disable Redis during tests
        run: |
          pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      # No need to manually install Docker Compose - it's preinstalled on Ubuntu runners
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - run: |
          docker compose build
          docker compose push
  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
      
  #   - name: Install Docker Compose
  #     run: |
  #       # Add Docker's official GPG key
  #       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        
  #       # Add Docker repository
  #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
  #       # Update package list
  #       sudo apt-get update
        
  #       # Install Docker Compose
  #       sudo apt-get install -y docker-compose-v2
        
  #       # Verify installation
  #       docker compose version
      
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
        
  #   - name: Extract metadata for Docker
  #     id: meta
  #     uses: docker/metadata-action@v4
  #     with:
  #       images: ${{ secrets.DOCKERHUB_USERNAME }}/tmdb-api
  #       tags: |
  #         type=ref,event=branch
  #         type=ref,event=tag
  #         type=sha,format=long
        
  #   - name: Build and push with docker-compose
  #     run: |
  #       docker compose build --no-cache
  #       docker compose push tmdb-api

  # security:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: Run Snyk to check for vulnerabilities
  #     uses: snyk/actions/python@master
  #     env:
  #       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #     with:
  #       args: --severity-threshold=high
        
  #   - name: Run Bandit
  #     run: |
  #       pip install bandit
  #       bandit -r tmdb-api/app/
        
  #   - name: Run Safety
  #     run: |
  #       pip install safety
  #       safety check 